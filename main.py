import requests
from bs4 import BeautifulSoup as b
import telebot

from telebot import types


class ProTracker:
    def __init__(self, nickname):
        print(f'https://www.dota2protracker.com/player/{nickname}')
        r = requests.get(f'https://www.dota2protracker.com/player/{nickname}')  # —Å–æ–∑–¥–∞–Ω–∏–µ
        # —Å—Å—ã–ª–∫–∏ –Ω–∞
        soup = b(r.text, 'html.parser')  # –≤—Å—è –∏–Ω—Ñ–∞ —Å –ø—Ä–æ—Ñ–∏–ª—è
        self.replay = soup.find_all(class_='copy-id')[:3]
        self.kk = soup.find_all(class_='played-box')  # –ø–æ –∫–ª–∞—Å—Å–∞–º –±–µ—Ä—É –∏–Ω—Ñ—É —Å —Å–∞–π—Ç–∞(–ø—Å–æ–ª–µ–¥–Ω–∏–µ –∏–≥—Ä—ã,
        # —Å—ã–≥—Ä–∞–Ω–Ω—ã–µ –∑–∞ 8 –¥–Ω–µ–π)
        self.games = soup.find_all(class_='yellow')  # —Å–∫–æ–ª—å–∫–æ –∏–≥—Ä –±—ã–ª–æ —Å—ã—Ä–∞–Ω–æ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 8 –¥–Ω–µ–π
        # —Å–∫–æ–ª—å–∫–æ –∏–≥—Ä
        # –±—ã–ª
        # —Å—ã–≥—Ä–∞–Ω–Ω–æ –∑–∞
        # –ø–æ—Å–ª–µ–¥–Ω–∏–µ 8 –¥–Ω–µ–π(–ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω–æ–µ –≤ –æ–¥–Ω–æ —á–∏—Å–ª–æ)
        self.las = soup.find_all(class_='row-0')  # –ø–µ–ø—Ä–≤–∞—è –∏–≥—Ä–∞, —Å–æ –≤—Å–µ–º–∏ –¥–∞–Ω–Ω—ã–º–∏, –ø–µ—Ä—Å–æ–Ω–∞–∂, —Ä–æ–ª—å,
        # –∏—Ç–æ–≥ –∏–≥—Ä—ã, —Ç–∏–º–º–µ–π—Ç—ã, –æ–ø–ø–æ–Ω–µ–Ω—Ç—ã, –∞–π—Ç–µ–º–±–∏–ª–¥
        self.priveou = soup.find_all(class_='row-1')  # –≤—Ç–æ—Ä–∞—è –∏–≥—Ä–∞, —Å–æ –≤—Å–µ–º–∏ –¥–∞–Ω–Ω—ã–º–∏, –ø–µ—Ä—Å–æ–Ω–∞–∂,
        # —Ä–æ–ª—å, –∏—Ç–æ–≥ –∏–≥—Ä—ã, —Ç–∏–º–º–µ–π—Ç—ã, –æ–ø–ø–æ–Ω–µ–Ω—Ç—ã, –∞–π—Ç–µ–º–±–∏–ª–¥
        self.prepreviou = soup.find_all(class_='row-2')  # —Ç—Ä–µ—Ç—å—è –∏–≥—Ä–∞, —Å–æ –≤—Å–µ–º–∏ –¥–∞–Ω–Ω—ã–º–∏, –ø–µ—Ä—Å–æ–Ω–∞–∂,
        # —Ä–æ–ª—å, –∏—Ç–æ–≥ –∏–≥—Ä—ã, —Ç–∏–º–º–µ–π—Ç—ã, –æ–ø–ø–æ–Ω–µ–Ω—Ç—ã, –∞–π—Ç–µ–º–±–∏–ª–¥
        self.mmr = soup.find_all(class_='td-mmr')[:3]  # –º–º—Ä –≤ —ç—Ç–∏—Ö —Ç—Ä–µ—Ö –∏–≥—Ä–∞—Ö

    def lastgames(self):
        # games_last_8_days = str(self.games[0])[21:23].rstrip('<')
        well = []
        for el in self.kk:
            well.append(str(el).strip('\n').split(' '))  # –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –≤–∫–ª–∞–¥–∫–∏ –æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∏–≥—Ä–∞—Ö
        heroes = []
        hero = []
        winrate = []
        for i in well:
            for el in i:
                if 'class="green"' in str(el):
                    winrate.append(el[14:19].rstrip('%'))  # –≤–∏–Ω—Ä–µ–π—Ç
                elif 'class="yellow"' in str(el):
                    winrate.append(el[15:20].rstrip('%'))  # –≤–∏–Ω—Ä–µ–π—Ç
                elif 'class="red"' in str(el):
                    winrate.append(el[12:17].rstrip('<').rstrip('%'))  # –≤–∏–Ω—Ä–µ–π—Ç

        for i in well:
            for el in i:
                if 'data=' in el:
                    heroes.append(el[6:])  # –≤–≤—Å–µ –≥–µ—Ä–æ–µ, –Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö –∏–≥—Ä–æ–∫ –∏–≥—Ä–∞–ª –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 8 –¥–Ω–µ–π

        for el in heroes:
            a = str(el).find('"')
            if a != -1:
                hero.append(el[:a])  # –æ—Ç–ª–∞–¥–∫–∞
            elif a == -1:
                hero.append(el)
        all = []
        # all.append(f'–í—Å–µ–≥–æ –∏–≥—Ä –∑–∞ 8 –¥–Ω–µ–π: {games_last_8_days}')
        for i in range(len(hero)):
            aa = f'{hero[i]}: {winrate[i]}%'  # –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–ì–µ—Ä–æ–π: –≤–∏–Ω—Ä–µ–π—Ç"
            all.append(aa)
        return '\n'.join(all)

    def last3matches(self):
        mmrs = []
        replays = []
        last = []
        priveous = []
        prepriveous = []
        for el in self.replay:
            replays.append(str(el)[25:35])
        for el in self.mmr:
            mmrs.append(str(el)[
                        19:23])  # –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–ª –º–º—Ä —Å —Å–ø–∏—Å–æ–∫, –Ω—É–ª–µ–≤–æ–π –∏–Ω–¥–µ–∫—Å - –ø–æ—Å–ª–µ–¥–Ω—è—è –∏–≥—Ä–∞, –∏–Ω–¥–µ–∫—Å 2 - —Ç—Ä–µ—Ç—å—è –∏–≥—Ä–∞ —Å –∫–æ–Ω—Ü–∞
        for el in self.las:
            last.append(str(el).split('\n'))  # –¥–∞–Ω–Ω—ã–µ —Å –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø–æ—Å–ª–µ–¥–Ω–µ–π –∏–≥—Ä—ã
        for el in self.priveou:
            priveous.append(str(el).split('\n'))  # –¥–∞–Ω–Ω—ã–µ —Å –ø—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω–µ–π –∏–≥—Ä—ã
        for el in self.prepreviou:
            prepriveous.append(str(el).split('\n'))  # –¥–∞–Ω–Ω—ã–µ —Å –ø—Ä–µ–¥–ø—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω–µ–π –∏–≥—Ä—ã
        last = (last[0][0].split('"'))[2:]  # —Å—Ä–µ–∑ –¥–∞–Ω–Ω—ã—Ö –ø–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∏–≥—Ä–µ, —Å –Ω—É–∂–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        priveous = (priveous[0][0].split('"'))[2:]  # —Å—Ä–µ–∑ –¥–∞–Ω–Ω—ã—Ö –ø–æ –ø—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω–µ–π –∏–≥—Ä–µ, —Å –Ω—É–∂–Ω—ã–º–∏
        # –¥–∞–Ω–Ω—ã–º–∏
        prepriveous = (prepriveous[0][0].split('"'))[2:]  # —Å—Ä–µ–∑ –¥–∞–Ω–Ω—ã—Ö –ø–æ –ø—Ä–µ–¥–ø—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω–µ–π –∏–≥—Ä–µ,
        # —Å –Ω—É–∂–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        last_info = []
        priveous_info = []
        prepriveous_info = []
        for i in range(1, 18, 2):
            last_info.append(last[i])
        for i in range(1, 18, 2):
            priveous_info.append(priveous[i])
        for i in range(1, 18, 2):
            prepriveous_info.append(prepriveous[i])
        return (f'---------------------------------------- \n'
                f"1st game played on the {last_info[0]} ({last_info[6]}) \n"
                f'Replay: {replays[0]} \n'
                f'Average mmr: {mmrs[0]} \n'
                f'Item build(in order): {last_info[2].replace(",", ", ")} \n'
                f"Player's team: {last_info[7]} \n"
                f"Enemy Team: {last_info[4]} \n"
                f"Famous people: {last_info[5]} \n"
                f"Result: {'win' if int(priveous_info[8]) == 1 else 'lose'} \n"
                f'---------------------------------------- \n'
                f"2nd game played on the {priveous_info[0]} ({priveous_info[6]}) \n"
                f'Replay: {replays[1]} \n'
                f'Average mmr: {mmrs[1]} \n'
                f'Item build(in order): {priveous_info[2].replace(",", ", ")} \n'
                f"Player's team: {priveous_info[7]} \n"
                f"Enemy Team: {priveous_info[4]} \n"
                f"Famous people: {priveous_info[5]} \n"
                f"Result: {'win' if int(priveous_info[8]) == 1 else 'lose'} \n"
                f'---------------------------------------- \n'
                f"3rd game played on the {prepriveous_info[0]} ({prepriveous_info[6]}) \n"
                f'Replay: {replays[2]} \n'
                f'Average mmr: {mmrs[2]} \n'
                f'Item build(in order): {prepriveous_info[2].replace(",", ", ")} \n'
                f"Player's team: {prepriveous_info[7]} \n"
                f"Enemy Team: {prepriveous_info[4]} \n"
                f"Famous people: {prepriveous_info[5]}\n"
                f"Result: {'win' if int(prepriveous_info[8]) == 1 else 'lose'} \n"
                f'----------------------------------------')


bot = telebot.TeleBot('6031419131:AAGJIz5ytYr-FzjbtuQkQa24TXidHHktrzs')
a = None
c = None

@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    bot.send_message(message.from_user.id, f"üëã –ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! –Ø —Ç–≤–æ–π –±–æ—Ç "
                                           f"–ø–æ Dota 2", reply_markup=markup)
    bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫ —á—Ç–æ –±—ã –Ω–∞—á–∞—Ç—å')


@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    global a
    global c
    if a is None:
        a = message.text
        c = ProTracker(a)
        bot.send_message(message.from_user.id, f'–í–∞—à –Ω–∏–∫: {message.text}')
    if message.text == '–ü–æ–º–µ–Ω—è—Ç—å –Ω–∏–∫':
        bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫')
        if message.text != a:
            a = message.text
            c = ProTracker(a)
        bot.send_message(message.from_user.id, f'–í–∞—à –Ω–∏–∫ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞'
                                               f' {message.text}',
                         parse_mode='Markdown')
    elif message.text == '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∏–≥—Ä –∑–∞ 8 –¥–Ω–µ–π':
        print(c.lastgames())
        bot.send_message(message.from_user.id, c.lastgames())
    elif message.text == '–ü–æ–¥—Ä–æ–±–Ω—ã–π —Ä–∞–∑–±–æ—Ä –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 3-—Ö –∏–≥—Ä':
        bot.send_message(message.from_user.id, c.last3matches())

    elif message.text == '–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ':
        bot.send_message(message.from_user.id,
                         '–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ',
                         parse_mode='Markdown')


bot.polling(none_stop=True, interval=0)
# a = ProTracker('bzm')
# print(a.lastgames())
# a.last3matches()
